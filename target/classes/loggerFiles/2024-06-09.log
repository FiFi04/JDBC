2024-06-09 16:09:06 org.example.utils.repository.BankAccRepository - SELECT * FROM bank WHERE id = 11
2024-06-09 16:09:06 org.example.utils.repository.BankAccRepository - SELECT * FROM address WHERE id = 98
2024-06-09 16:09:06 org.example.bank.service.impl.AccountServiceImpl - exception message: Błędne dane podczas dodawania konta: {nip=Niepoprawny NIP, regon=Niepoprawny REGON, swift=Niepoprawny kod SWIFT}: 
org.example.utils.exceptions.ValidationException: Błędne dane podczas dodawania konta: 
	at org.example.bank.service.impl.AccountServiceImpl.open(AccountServiceImpl.java:43)
	at org.example.main.MainTest.main(MainTest.java:116)
2024-06-09 16:10:42 org.example.utils.repository.BankAccRepository - SELECT * FROM bank WHERE id = 11
2024-06-09 16:10:42 org.example.utils.repository.BankAccRepository - SELECT * FROM address WHERE id = 98
2024-06-09 16:10:42 org.example.bank.service.impl.AccountServiceImpl - exception message: Błędne dane podczas dodawania konta: {nip=Niepoprawny NIP, regon=Niepoprawny REGON, swift=Niepoprawny kod SWIFT}: 
org.example.utils.exceptions.ValidationException: Błędne dane podczas dodawania konta: 
	at org.example.bank.service.impl.AccountServiceImpl.open(AccountServiceImpl.java:43)
	at org.example.main.MainTest.main(MainTest.java:116)
2024-06-09 16:15:20 org.example.utils.repository.BankAccRepository - SELECT * FROM bank WHERE id = 59
2024-06-09 16:15:20 org.example.utils.repository.BankAccRepository - SELECT * FROM address WHERE id = 151
2024-06-09 16:15:20 org.example.bank.service.impl.AccountServiceImpl - exception message: Błędne dane podczas dodawania konta: {nip=Niepoprawny NIP, regon=Niepoprawny REGON, swift=Niepoprawny kod SWIFT}: 
org.example.utils.exceptions.ValidationException: Błędne dane podczas dodawania konta: 
	at org.example.bank.service.impl.AccountServiceImpl.open(AccountServiceImpl.java:43)
	at org.example.main.MainTest.main(MainTest.java:116)
2024-06-09 16:15:57 org.example.utils.repository.BankAccRepository - SELECT * FROM bank WHERE id = 59
2024-06-09 16:15:57 org.example.utils.repository.BankAccRepository - SELECT * FROM address WHERE id = 151
2024-06-09 16:20:16 org.example.bank.service.impl.AccountServiceImpl - exception message: Błędne dane podczas dodawania konta: {nip=Niepoprawny NIP, regon=Niepoprawny REGON, swift=Niepoprawny kod SWIFT}: 
org.example.utils.exceptions.ValidationException: Błędne dane podczas dodawania konta: 
	at org.example.bank.service.impl.AccountServiceImpl.open(AccountServiceImpl.java:43)
	at org.example.main.MainTest.main(MainTest.java:116)
2024-06-09 16:20:18 org.example.utils.repository.BankAccRepository - SELECT * FROM bank WHERE id = 59
2024-06-09 16:20:18 org.example.utils.repository.BankAccRepository - SELECT * FROM address WHERE id = 151
2024-06-09 16:22:07 org.example.bank.service.impl.AccountServiceImpl - exception message: Błędne dane podczas dodawania konta: {nip=Niepoprawny NIP, regon=Niepoprawny REGON, swift=Niepoprawny kod SWIFT}: 
org.example.utils.exceptions.ValidationException: Błędne dane podczas dodawania konta: 
	at org.example.bank.service.impl.AccountServiceImpl.open(AccountServiceImpl.java:43)
	at org.example.main.MainTest.main(MainTest.java:116)
2024-06-09 16:22:09 org.example.utils.repository.BankAccRepository - SELECT * FROM bank WHERE id = 59
2024-06-09 16:22:09 org.example.utils.repository.BankAccRepository - SELECT * FROM address WHERE id = 151
2024-06-09 16:22:51 org.example.bank.service.impl.AccountServiceImpl - exception message: Błędne dane podczas dodawania konta: {nip=Niepoprawny NIP, regon=Niepoprawny REGON, swift=Niepoprawny kod SWIFT}: 
org.example.utils.exceptions.ValidationException: Błędne dane podczas dodawania konta: 
	at org.example.bank.service.impl.AccountServiceImpl.open(AccountServiceImpl.java:43)
	at org.example.main.MainTest.main(MainTest.java:116)
2024-06-09 16:22:54 org.example.utils.repository.BankAccRepository - SELECT * FROM bank WHERE id = 59
2024-06-09 16:22:54 org.example.utils.repository.BankAccRepository - SELECT * FROM address WHERE id = 151
2024-06-09 16:24:24 org.example.bank.service.impl.AccountServiceImpl - exception message: Błędne dane podczas dodawania konta: {nip=Niepoprawny NIP, regon=Niepoprawny REGON, swift=Niepoprawny kod SWIFT}: 
org.example.utils.exceptions.ValidationException: Błędne dane podczas dodawania konta: 
	at org.example.bank.service.impl.AccountServiceImpl.open(AccountServiceImpl.java:43)
	at org.example.main.MainTest.main(MainTest.java:116)
2024-06-09 16:26:26 org.example.utils.repository.BankAccRepository - SELECT * FROM bank WHERE id = 59
2024-06-09 16:26:26 org.example.utils.repository.BankAccRepository - SELECT * FROM address WHERE id = 151
2024-06-09 16:32:22 org.example.bank.service.impl.AccountServiceImpl - exception message: Błędne dane podczas dodawania konta: {nip=Niepoprawny NIP, regon=Niepoprawny REGON, swift=Niepoprawny kod SWIFT}: 
org.example.utils.exceptions.ValidationException: Błędne dane podczas dodawania konta: 
	at org.example.bank.service.impl.AccountServiceImpl.open(AccountServiceImpl.java:43)
	at org.example.main.MainTest.main(MainTest.java:116)
2024-06-09 16:32:25 org.example.utils.repository.BankAccRepository - SELECT * FROM bank WHERE id = 59
2024-06-09 16:32:25 org.example.utils.repository.BankAccRepository - SELECT * FROM address WHERE id = 151
2024-06-09 16:32:30 org.example.bank.service.impl.AccountServiceImpl - exception message: Błędne dane podczas dodawania konta: {nip=Niepoprawny NIP, regon=Niepoprawny REGON, swift=Niepoprawny kod SWIFT}: 
org.example.utils.exceptions.ValidationException: Błędne dane podczas dodawania konta: 
	at org.example.bank.service.impl.AccountServiceImpl.open(AccountServiceImpl.java:43)
	at org.example.main.MainTest.main(MainTest.java:116)
2024-06-09 16:32:31 org.example.utils.repository.BankAccRepository - SELECT * FROM bank WHERE id = 59
2024-06-09 16:32:31 org.example.utils.repository.BankAccRepository - SELECT * FROM address WHERE id = 151
2024-06-09 16:32:52 org.example.bank.service.impl.AccountServiceImpl - exception message: Błędne dane podczas dodawania konta: {nip=Niepoprawny NIP, regon=Niepoprawny REGON, swift=Niepoprawny kod SWIFT}: 
org.example.utils.exceptions.ValidationException: Błędne dane podczas dodawania konta: 
	at org.example.bank.service.impl.AccountServiceImpl.open(AccountServiceImpl.java:43)
	at org.example.main.MainTest.main(MainTest.java:116)
2024-06-09 16:32:54 org.example.utils.repository.BankAccRepository - SELECT * FROM bank WHERE id = 59
2024-06-09 16:32:54 org.example.utils.repository.BankAccRepository - SELECT * FROM address WHERE id = 151
2024-06-09 16:34:13 org.example.bank.service.impl.AccountServiceImpl - exception message: Błędne dane podczas dodawania konta: {nip=Niepoprawny NIP, regon=Niepoprawny REGON, swift=Niepoprawny kod SWIFT}: 
org.example.utils.exceptions.ValidationException: Błędne dane podczas dodawania konta: 
	at org.example.bank.service.impl.AccountServiceImpl.open(AccountServiceImpl.java:43)
	at org.example.main.MainTest.main(MainTest.java:116)
2024-06-09 16:35:14 org.example.utils.repository.BankAccRepository - SELECT * FROM bank WHERE id = 59
2024-06-09 16:35:14 org.example.utils.repository.BankAccRepository - SELECT * FROM address WHERE id = 151
2024-06-09 16:35:14 org.example.bank.service.impl.AccountServiceImpl - exception message: Błędne dane podczas dodawania konta: {nip=Niepoprawny NIP, regon=Niepoprawny REGON, swift=Niepoprawny kod SWIFT}: 
org.example.utils.exceptions.ValidationException: Błędne dane podczas dodawania konta: 
	at org.example.bank.service.impl.AccountServiceImpl.open(AccountServiceImpl.java:43)
	at org.example.main.MainTest.main(MainTest.java:116)
2024-06-09 16:35:24 org.example.utils.repository.BankAccRepository - SELECT * FROM bank WHERE id = 1
2024-06-09 16:35:24 org.example.utils.repository.BankAccRepository - SELECT * FROM address WHERE id = 1
2024-06-09 16:35:24 org.example.bank.service.impl.AccountServiceImpl - exception message: Błędne dane podczas dodawania konta: {nip=Niepoprawny NIP, krs=Niepoprawny numer KRS, regon=Niepoprawny REGON}: 
org.example.utils.exceptions.ValidationException: Błędne dane podczas dodawania konta: 
	at org.example.bank.service.impl.AccountServiceImpl.open(AccountServiceImpl.java:43)
	at org.example.main.MainTest.main(MainTest.java:116)
2024-06-09 16:35:42 org.example.utils.repository.BankAccRepository - SELECT * FROM bank WHERE id = 2
2024-06-09 16:35:42 org.example.utils.repository.BankAccRepository - SELECT * FROM address WHERE id = 1
2024-06-09 16:35:42 org.example.bank.service.impl.AccountServiceImpl - exception message: Błędne dane podczas dodawania konta: {nip=Niepoprawny NIP, regon=Niepoprawny REGON, swift=Niepoprawny kod SWIFT}: 
org.example.utils.exceptions.ValidationException: Błędne dane podczas dodawania konta: 
	at org.example.bank.service.impl.AccountServiceImpl.open(AccountServiceImpl.java:43)
	at org.example.main.MainTest.main(MainTest.java:116)
2024-06-09 16:42:09 org.example.utils.repository.BankAccRepository - INSERT INTO address (street,house_number,flat_number,zip_code,city,address_type) VALUES ('Lesna','33a','5','22-333','Bielsko Biała','MAIN')
2024-06-09 16:42:09 org.example.utils.repository.BankAccRepository - SELECT * FROM address WHERE id = 278
2024-06-09 16:42:09 org.example.utils.repository.BankAccRepository - INSERT INTO bank (name,address_id,swift,website_url,nip,krs,regon) VALUES ('NEWBANK','278','ABCDEFQA123','newbank.com','5219518865','5498495161','856192703')
2024-06-09 16:42:09 org.example.utils.repository.BankAccRepository - SELECT * FROM bank WHERE id = 94
2024-06-09 16:42:09 org.example.utils.repository.BankAccRepository - INSERT INTO account (account_number,balance,account_type,bank_id) VALUES ('125489654785469514789951','5684.11','PERSONAL','94')
2024-06-09 16:42:09 org.example.utils.repository.BankAccRepository - Zapisano w bazie danych
2024-06-09 17:14:10 org.example.utils.repository.BankAccRepository - INSERT INTO address (street,house_number,flat_number,zip_code,city,address_type) VALUES ('Lesna','33a','5','22-333','Bielsko Biała','MAIN')
2024-06-09 17:14:10 org.example.utils.repository.BankAccRepository - SELECT * FROM address WHERE id = 279
2024-06-09 17:14:10 org.example.utils.repository.BankAccRepository - INSERT INTO bank (name,address_id,swift,website_url,nip,krs,regon) VALUES ('NEWBANK','279','ABCDEFQA123','newbank.com','5219518865','5498495161','856192703')
2024-06-09 17:14:10 org.example.utils.repository.BankAccRepository - SELECT * FROM bank WHERE id = 95
2024-06-09 17:14:10 org.example.utils.repository.BankAccRepository - INSERT INTO account (account_number,balance,account_type,bank_id) VALUES ('125489654785469514789951','5684.11','PERSONAL','95')
2024-06-09 17:14:10 org.example.utils.repository.BankAccRepository - Zapisano w bazie danych
2024-06-09 17:14:10 org.example.utils.repository.BankAccRepository - SELECT * FROM account WHERE id = 32
2024-06-09 17:14:10 org.example.bank.repository.AccountRepository - INSERT INTO client_account (account_id, client_id) VALUES (32, 49)
2024-06-09 17:23:42 org.example.utils.repository.BankAccRepository - DELETE FROM account WHERE id = 32
2024-06-09 17:23:42 org.example.utils.repository.BankAccRepository - Wycofano zmiany z bazy danych
2024-06-09 17:23:42 org.example.bank.service.impl.AccountServiceImpl - exception message: Błąd podczas usuwania obiektu z bazy danych: Cannot delete or update a parent row: a foreign key constraint fails (`bankacc`.`client_account`, CONSTRAINT `client_account_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `account` (`id`)): 
org.example.utils.exceptions.RepositoryException: Błąd podczas usuwania obiektu z bazy danych: Cannot delete or update a parent row: a foreign key constraint fails (`bankacc`.`client_account`, CONSTRAINT `client_account_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `account` (`id`))
	at org.example.utils.repository.BankAccRepository.deleteById(BankAccRepository.java:202)
	at org.example.bank.service.impl.AccountServiceImpl.close(AccountServiceImpl.java:59)
	at org.example.main.MainTest.main(MainTest.java:109)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`bankacc`.`client_account`, CONSTRAINT `client_account_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `account` (`id`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1334)
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2084)
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1245)
	at org.example.utils.repository.BankAccRepository.deleteById(BankAccRepository.java:190)
	... 2 more
2024-06-09 18:16:00 org.example.utils.repository.BankAccRepository - SELECT * FROM client WHERE id = 51
2024-06-09 18:16:00 org.example.utils.repository.BankAccRepository - SELECT * FROM address WHERE id = 140
2024-06-09 18:16:00 org.example.utils.repository.BankAccRepository - SELECT * FROM address WHERE id = 140
2024-06-09 18:16:00 org.example.utils.repository.BankAccRepository - SELECT * FROM account WHERE id = 32
2024-06-09 18:16:00 org.example.bank.repository.AccountRepository - INSERT INTO client_account (account_id, client_id) VALUES (32, 51)
2024-06-09 18:16:00 org.example.bank.service.impl.AccountServiceImpl - Dodano współwłaściciela
2024-06-09 18:17:17 org.example.utils.repository.BankAccRepository - DELETE FROM account WHERE id = 32
2024-06-09 18:17:17 org.example.utils.repository.BankAccRepository - Wycofano zmiany z bazy danych
2024-06-09 18:17:17 org.example.bank.service.impl.AccountServiceImpl - exception message: Błąd podczas usuwania obiektu z bazy danych: Cannot delete or update a parent row: a foreign key constraint fails (`bankacc`.`client_account`, CONSTRAINT `client_account_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `account` (`id`)): 
org.example.utils.exceptions.RepositoryException: Błąd podczas usuwania obiektu z bazy danych: Cannot delete or update a parent row: a foreign key constraint fails (`bankacc`.`client_account`, CONSTRAINT `client_account_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `account` (`id`))
	at org.example.utils.repository.BankAccRepository.deleteById(BankAccRepository.java:202)
	at org.example.bank.service.impl.AccountServiceImpl.close(AccountServiceImpl.java:60)
	at org.example.main.MainTest.main(MainTest.java:112)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`bankacc`.`client_account`, CONSTRAINT `client_account_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `account` (`id`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1334)
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2084)
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1245)
	at org.example.utils.repository.BankAccRepository.deleteById(BankAccRepository.java:190)
	... 2 more
2024-06-09 18:17:29 org.example.bank.repository.AccountRepository - SELECT * FROM client_account WHERE account_id = 32
2024-06-09 18:17:29 org.example.bank.repository.AccountRepository - DELETE FROM client_account WHERE id IN ([32, 32])
2024-06-09 18:17:29 org.example.bank.service.impl.AccountServiceImpl - exception message: Błąd usuwania powiązanych właścicieli kont: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[32, 32])' at line 1: 
org.example.utils.exceptions.RepositoryException: Błąd usuwania powiązanych właścicieli kont: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[32, 32])' at line 1
	at org.example.bank.repository.AccountRepository.deleteAssignedOwner(AccountRepository.java:52)
	at org.example.bank.service.impl.AccountServiceImpl.close(AccountServiceImpl.java:59)
	at org.example.main.MainTest.main(MainTest.java:112)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[32, 32])' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1334)
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2084)
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1245)
	at org.example.bank.repository.AccountRepository.deleteAssignedOwner(AccountRepository.java:50)
	... 2 more
2024-06-09 18:18:18 org.example.bank.repository.AccountRepository - SELECT * FROM client_account WHERE account_id = 32
2024-06-09 18:18:18 org.example.bank.repository.AccountRepository - DELETE FROM client_account WHERE id IN ([32, 32])
2024-06-09 18:18:18 org.example.bank.service.impl.AccountServiceImpl - exception message: Błąd usuwania powiązanych właścicieli kont: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[32, 32])' at line 1: 
org.example.utils.exceptions.RepositoryException: Błąd usuwania powiązanych właścicieli kont: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[32, 32])' at line 1
	at org.example.bank.repository.AccountRepository.deleteAssignedOwner(AccountRepository.java:52)
	at org.example.bank.service.impl.AccountServiceImpl.close(AccountServiceImpl.java:59)
	at org.example.main.MainTest.main(MainTest.java:112)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[32, 32])' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1334)
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2084)
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1245)
	at org.example.bank.repository.AccountRepository.deleteAssignedOwner(AccountRepository.java:50)
	... 2 more
2024-06-09 18:19:55 org.example.bank.repository.AccountRepository - SELECT * FROM client_account WHERE account_id = 32
2024-06-09 18:19:55 org.example.bank.repository.AccountRepository - DELETE FROM client_account WHERE id IN ([19, 20])
2024-06-09 18:19:55 org.example.bank.service.impl.AccountServiceImpl - exception message: Błąd usuwania powiązanych właścicieli kont: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[19, 20])' at line 1: 
org.example.utils.exceptions.RepositoryException: Błąd usuwania powiązanych właścicieli kont: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[19, 20])' at line 1
	at org.example.bank.repository.AccountRepository.deleteAssignedOwner(AccountRepository.java:51)
	at org.example.bank.service.impl.AccountServiceImpl.close(AccountServiceImpl.java:59)
	at org.example.main.MainTest.main(MainTest.java:112)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '[19, 20])' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1334)
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2084)
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1245)
	at org.example.bank.repository.AccountRepository.deleteAssignedOwner(AccountRepository.java:49)
	... 2 more
2024-06-09 18:25:01 org.example.bank.repository.AccountRepository - SELECT * FROM client_account WHERE account_id = 32
2024-06-09 18:25:01 org.example.bank.repository.AccountRepository - DELETE FROM client_account WHERE id IN (19, 20)
2024-06-09 18:25:02 org.example.utils.repository.BankAccRepository - DELETE FROM account WHERE id = 32
2024-06-09 21:18:15 org.example.bank.repository.AccountRepository - SELECT * FROM client_account WHERE account_id = 32
2024-06-09 21:18:15 org.example.bank.repository.AccountRepository - DELETE FROM client_account WHERE id IN ()
2024-06-09 21:18:15 org.example.bank.service.impl.AccountServiceImpl - exception message: Błąd usuwania powiązanych właścicieli kont: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 1: 
org.example.utils.exceptions.RepositoryException: Błąd usuwania powiązanych właścicieli kont: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 1
	at org.example.bank.repository.AccountRepository.deleteAssignedOwner(AccountRepository.java:52)
	at org.example.bank.service.impl.AccountServiceImpl.close(AccountServiceImpl.java:59)
	at org.example.main.MainTest.main(MainTest.java:112)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ')' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1334)
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2084)
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1245)
	at org.example.bank.repository.AccountRepository.deleteAssignedOwner(AccountRepository.java:50)
	... 2 more
